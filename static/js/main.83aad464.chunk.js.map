{"version":3,"sources":["component/InputBase/InputBase.jsx","component/validation.js","helper/checkErrorBeforeSave.js","component/Login/Login.jsx","component/Signup/Signup.jsx","component/Item/Item.jsx","component/Process/Process.jsx","component/Select/Select.jsx","component/InputForm/InputForm.jsx","component/SummaryItem/SummaryItem.jsx","component/Summary/Summary.jsx","component/ShippingMethod/ShippingMethod.jsx","component/Confirm/Confirm.jsx","component/InputForm/constants.js","component/PaymentInfo/PaymentInfo.jsx","component/Shipping/Shipping.jsx","component/Cart/Cart.jsx","services.js","constant.js","component/HomepageItem/HomepageItem.jsx","component/SearchResult/SearchResult.jsx","component/SearchInput/SearchInput.jsx","component/Popup/Popup.jsx","component/StatusElement/StatusElement.jsx","component/HomepageCartStatus/HomepageCartStatus.jsx","component/Homepage/Homepage.jsx","component/SignupLogin/SignupLogin.jsx","App.js","reportWebVitals.js","index.js"],"names":["InputBase","className","this","props","onClick","name","icon","faEye","passWordToggler","errorM","React","Component","emailValidation","email","search","passwordValidation","password","onlyStringValidation","content","onlyNumValidation","num","checkNullValidation","length","checkErrorBeforeSave","state","userData","error","errorValue","Object","keys","forEach","val","errorKey","INIT_USER_LOGIN","Login","togglePasswordVisibility","setState","isPasswordShown","handleInputData","target","value","prevState","handleValidation","type","errorText","emailError","passwordError","handleBlur","handleSubmit","e","loginData","label","onSubmit","map","item","placeHolder","onChange","onBlur","autoComplete","INIT_USER_CREATEACCOUNT","confirmPassword","firstName","surName","postcode","Signup","prevPassword","confirmPasswordError","firstNameError","surNameError","postcodeError","createAccountData","Item","handleItemDelete","itemDisplay","pushElementToArr","index","handleSelect","quantity","Number","totalPrice","itemInfo","price","toFixed","img","categories","src","alt","inventory","id","faTimes","Process","status","Select","selectTitle","option","InputForm","format","title","SummaryItem","product","Summary","cardNumDisplay","cardNum","cardNumLength","digit","join","discount","itemData","cardData","shippingMethod","handlePageFinished","summaryData","payNum","nameSurname","zipCode","yourAddress","addressTitle","city","country","cellphone","toUpperCase","cardHolderName","cardNumber","expireMonth","expireYear","ShippingMethod","selectedOption","info","checked","Confirm","handleBtnBack","toPrevPage","toNextPage","isPageFinished","OTHERCARDS","INIT_CARD","ccv","PaymentInfo","numberSeq","start","end","Array","fill","element","mask","split","match","RegExp","regexPattern","MASTERCARD","VISA","AMERICANEXPRESS","DISCOVER","card","replace","test","trim","cardNumberValidation","isError","maxLength","inputData","SHIPPING","telephone","Shipping","handleOptionChange","homepageData","Cart","setInitialPriceArr","priceArr","push","sumPriceArr","arr","reduce","prev","current","quantityArr","selectedItemIndex","selectedItem","selectedPriceArr","selectedQuantityArr","data","filter","includes","i","tempObject","Service","limit","a","Promise","success","failure","url","URL","params","key","searchParams","append","headers","process","fetch","method","res","json","description","available","raw","HomepageItem","popup","popupClick","SearchResult","input","displayItemArr","SearchInput","placeholder","Popup","removeHTMLtag","str","popupClose","addToCart","StatusElement","HomepageCartStatus","Homepage","loading","popupItemIndex","cartItem","handlePopupClick","currentTarget","dataset","fetchCommerceAPI","then","console","log","class","SignupLogin","switchToNextPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83aad464.chunk.js","sourcesContent":["import React from 'react'\r\nimport './InputBase.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEye } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass InputBase extends React.Component{\r\n    render(){\r\n        return(\r\n            <label>\r\n            <input className='input-root' {...this.props} onClick={this.props.onClick}/>\r\n            { (this.props.name === 'password' || this.props.name === 'confirmPassword') &&\r\n                <FontAwesomeIcon \r\n                icon={faEye} \r\n                className='eyeIcon' \r\n                onClick = {this.props.passWordToggler} />\r\n            }\r\n            {this.props.errorM && <div className='errorInputBase'>{this.props.errorM}</div>}\r\n            </label>\r\n        )\r\n    }\r\n} \r\n\r\nexport default InputBase","export const emailValidation = email => {\r\n    const emailRegex = /^\\w+((-\\w+)|(\\.\\w+))*@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/;\r\n    if (email.search(emailRegex) === -1) {\r\n        return 'Enter the valid email address'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const passwordValidation = (password) => {\r\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,20}$/;\r\n    if (password.search(passwordRegex) === -1) {\r\n        return 'Please enter the valid password'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const samePassword = (prevPassword, currentPassword) => {\r\n    if (prevPassword !== currentPassword) {\r\n        return 'Please enter the same password'\r\n    } else if (!prevPassword) {\r\n        return 'Please enter the password before confirm'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const onlyStringValidation = content => {\r\n    const contentRegex = /^[A-Z]+$/i\r\n    if (content.search(contentRegex) === -1) {\r\n        return 'Enter the valid name'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const postcodeValidation = postcode => {\r\n    const USpostcodeRegex = /^[0-9]{5}(?:-[0-9]{4})?$/\r\n    if (postcode.search(USpostcodeRegex) === -1) {\r\n        return 'Enter the valid postcode'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const onlyNumValidation = num => {\r\n    const numRegex = /^[0-9]+$/;\r\n    if (num.search(numRegex) === -1) {\r\n        return 'Enter number only'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const checkNullValidation = content => {\r\n    if (!content.length) {\r\n        return 'Required'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const cardNumberValidation = (cardNumber) => {\r\n    const regexPattern = {\r\n        MASTERCARD: /^5[1-5][0-9]{1,}|^2[2-7][0-9]{1,}$/,\r\n        VISA: /^4[0-9]{2,}$/,\r\n        AMERICANEXPRESS: /^3[47][0-9]{5,}$/,\r\n        DISCOVER: /^6(?:011|5[0-9]{2})[0-9]{3,}$/\r\n    }\r\n    for (const card in regexPattern) {\r\n        if (cardNumber.replace(/[^\\d]/g, '').match(regexPattern[card])) {\r\n            if (cardNumber) {\r\n                return cardNumber && /^[1-6]{1}[0-9]{14,15}$/i.test(cardNumber.replace(/[^\\d]/g, '').trim())\r\n                    ? ''\r\n                    : 'Enter the valid card number'\r\n            }\r\n        }\r\n    }\r\n    return 'Enter the valid card number'\r\n}\r\n\r\n\r\n\r\n","export const checkErrorBeforeSave = (state) => {\r\n    const { userData, error } = state\r\n    let errorValue = {}\r\n\r\n    Object.keys(userData).forEach(val => {\r\n        let errorKey = val + 'Error'\r\n        if (!userData[val].length || error[errorKey]) {\r\n            if (!userData[val].length) {\r\n                errorValue = { ...errorValue, [`${val}Error`]: 'Required' }\r\n            } else {\r\n                errorValue = { ...errorValue, [`${val}Error`]: error[`${val}Error`] }\r\n            }\r\n        }\r\n    })\r\n\r\n    return errorValue\r\n}","import React from 'react'\r\nimport InputBase from '../InputBase/InputBase'\r\nimport './Login.css'\r\nimport { emailValidation, passwordValidation} from '../validation'\r\nimport { checkErrorBeforeSave } from '../../helper/checkErrorBeforeSave'\r\n\r\nconst INIT_USER_LOGIN = {\r\n    email:'',\r\n    password:'',\r\n}\r\n\r\n\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n         userData:INIT_USER_LOGIN,\r\n         isPasswordShown:false,\r\n         error : {},\r\n        }\r\n    }\r\n\r\n    togglePasswordVisibility = () =>{\r\n        this.setState({\r\n            isPasswordShown: !this.state.isPasswordShown,\r\n        })\r\n    }\r\n\r\n    handleInputData = ({target:{name,value}}) =>{\r\n        this.setState( prevState => ({\r\n            userData : {...prevState.userData, [name] : value}\r\n        }))\r\n    }\r\n\r\n    handleValidation = (type, value) =>{\r\n        let errorText\r\n        switch (type) {\r\n            case 'email':\r\n                errorText = emailValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        emailError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'password':\r\n                errorText = passwordValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        passwordError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleBlur = ({target:{name,value}}) => this.handleValidation(name,value)\r\n\r\n    handleSubmit = (e) => {\r\n        const errorValue = checkErrorBeforeSave(this.state)\r\n\r\n        if(Object.keys(errorValue).length === 0){\r\n            this.setState({\r\n                userData:INIT_USER_LOGIN,\r\n            }, this.props.handleSubmit)\r\n        } else{\r\n            this.setState({ 'error': errorValue })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const loginData = [\r\n            {label:'E-Mail', name:'email', type:'email', error:'emailError'},\r\n            {label:'password', name:'password', type:'password', error:'passwordError'},\r\n        ]\r\n        \r\n        return(\r\n            <>\r\n            <form onSubmit={this.handleSubmit}>\r\n                {loginData.map(item => (\r\n                    <InputBase \r\n                        placeHolder={item.label}\r\n                        type = {(item.type === 'password' || item.type === 'confirmPassword') ?\r\n                        (this.state.isPasswordShown ?  'text' : 'password') : item.type\r\n                        }\r\n                        value = {loginData && loginData[item.name]}\r\n                        onChange = {this.handleInputData}\r\n                        onBlur = {this.handleBlur}\r\n                        autoComplete = 'off'\r\n                        name = {item.name}\r\n                        passWordToggler = {this.togglePasswordVisibility}\r\n                        errorM = {\r\n                            (this.state.error \r\n                            && this.state.error[item.error]\r\n                            && this.state.error[item.error].length > 1)\r\n                            ? this.state.error[item.error]\r\n                            : null\r\n                        }\r\n                    />\r\n                    ))\r\n                }\r\n                {/* submit button*/}\r\n                <InputBase name='login' type='submit' value='Login' />\r\n                <div className='btn-wrapper fbSignIn'>\r\n                    <InputBase type=\"submit\" value='Sign up with FACEBOOK' />\r\n                </div>\r\n            </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport './Signup.css'\r\nimport InputBase from '../InputBase/InputBase'\r\nimport { emailValidation, passwordValidation, onlyStringValidation, samePassword, postcodeValidation} from '../validation'\r\nimport { checkErrorBeforeSave } from '../../helper/checkErrorBeforeSave'\r\n\r\nconst INIT_USER_CREATEACCOUNT = {\r\n    email:'',\r\n    password:'',\r\n    confirmPassword:'',\r\n    firstName:'',\r\n    surName:'',\r\n    postcode:'',\r\n}\r\n\r\nclass Signup extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            isPasswordShown: false,\r\n            userData:INIT_USER_CREATEACCOUNT,\r\n            error:{},\r\n        }\r\n    }\r\n\r\n    togglePasswordVisibility = () =>{\r\n        this.setState({\r\n            isPasswordShown: !this.state.isPasswordShown,\r\n        })\r\n    }\r\n\r\n    handleInputData = ({target:{name,value}}) =>{\r\n        this.setState( prevState => ({\r\n            userData : {...prevState.userData, [name] : value}\r\n        }))\r\n    }\r\n\r\n    handleValidation = (type, value) =>{\r\n        let errorText\r\n        switch (type) {\r\n            case 'email':\r\n                errorText = emailValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        emailError:errorText,\r\n                    }\r\n                }))\r\n                \r\n                break;\r\n            case 'password':\r\n                errorText = passwordValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        passwordError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'confirmPassword':\r\n                errorText = samePassword(this.state.userData.password,value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        confirmPasswordError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'firstName':\r\n                errorText = onlyStringValidation(value)\r\n                // setState error\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        firstNameError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'surName':\r\n                errorText = onlyStringValidation(value)\r\n                // setState error\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        surNameError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'postcode':\r\n                errorText = postcodeValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        postcodeError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleBlur = ({target:{name,value}}) => this.handleValidation(name,value)\r\n\r\n    handleSubmit = (e) => {\r\n        const errorValue = checkErrorBeforeSave(this.state)\r\n\r\n        if(Object.keys(errorValue).length === 0){\r\n            this.setState({\r\n                userData:INIT_USER_CREATEACCOUNT,\r\n            }, this.props.handleSubmit)\r\n        } else{\r\n            this.setState({ 'error': errorValue })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const createAccountData = [\r\n                {label:'E-Mail', name:'email', type:'email', error:'emailError'},\r\n                {label:'password', name:'password', type:'password', error:'passwordError'},\r\n                {label:'confirm password', name:'confirmPassword', type:'password', error:'confirmPasswordError'},\r\n                {label:'first name', name:'firstName', type:'text', error:'firstNameError'},\r\n                {label:'surname', name:'surName', type:'text', error:'surNameError'},\r\n                {label:'postcode', name:'postcode', type:'text', error:'postcodeError'},\r\n            ]\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                {createAccountData.map(item => (\r\n                    <InputBase \r\n                        placeHolder={item.label}\r\n                        type = {(item.type === 'password' || item.type === 'confirmPassword') ?\r\n                        (this.state.isPasswordShown ?  'text' : 'password') : item.type\r\n                        }\r\n                        value = {createAccountData && createAccountData[item.name]}\r\n                        onChange = {this.handleInputData}\r\n                        onBlur = {this.handleBlur}\r\n                        autoComplete = 'off'\r\n                        name = {item.name}\r\n                        passWordToggler = {this.togglePasswordVisibility}\r\n                        errorM = {\r\n                            (this.state.error \r\n                            && this.state.error[item.error]\r\n                            && this.state.error[item.error].length > 1)\r\n                            ? this.state.error[item.error]\r\n                            : null\r\n                        }\r\n                    />\r\n                    ))\r\n                }\r\n                {/* submit button*/}\r\n                <InputBase name='submit' type='submit' value='Submit'></InputBase>\r\n                <div className='btn-wrapper fbSignIn'>\r\n                    <InputBase type=\"submit\" value='Sign up with FACEBOOK' />\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup","import React from 'react'\r\nimport './Item.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Item extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            quantity:null,\r\n            totalPrice:null,\r\n            itemDisplay:true,\r\n        }\r\n    }\r\n\r\n    handleItemDelete = () =>{\r\n        let itemDisplay = this.state.itemDisplay\r\n        this.setState({\r\n            itemDisplay:!itemDisplay\r\n        },() => {this.props.pushElementToArr(0,this.props.index)} )\r\n    }\r\n\r\n    handleSelect = e =>{\r\n        this.setState({ \r\n            quantity: Number(e.target.value),\r\n            totalPrice: (Number(e.target.value) * this.props.itemInfo.price).toFixed(2)\r\n        }, () => {this.props.pushElementToArr(this.state.totalPrice,this.state.quantity,this.props.index)});\r\n    }\r\n\r\n    render(){\r\n        const {itemInfo} = this.props\r\n        const img = `/codecommerce/img/${itemInfo.categories}/${itemInfo.name}.jpg`\r\n        \r\n        return(\r\n            this.state.itemDisplay && \r\n            (<div className='CartItemWrapper'>\r\n                <div className=\"product\">\r\n                    <div className=\"imgWrapper\">\r\n                        <img src={img} alt=\"product\" />\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <h6>{itemInfo.name}</h6>\r\n                        <div> <span className='boldTitle'>CATEGORIES </span><br /> {itemInfo.categories}</div>\r\n                        <div> <span className='boldTitle'>INVENTORY  </span><br /> {itemInfo.inventory}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"price\">{itemInfo.price}</div>\r\n                <div className=\"quantity\">\r\n                    <select name=\"quantity\" id=\"\" onChange={this.handleSelect}>\r\n                        <option ></option>\r\n                        <option value='1'>1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"totalPrice\">{this.state.totalPrice}</div>\r\n                <FontAwesomeIcon icon={faTimes} className='timesIcon' onClick={this.handleItemDelete}\r\n                 />\r\n            </div>)\r\n        )\r\n    }\r\n}\r\n\r\nexport default Item","import React from 'react'\r\nimport './Process.css'\r\n\r\nclass Process extends React.Component{\r\n    render(){\r\n        switch (this.props.status) {\r\n            case 1:\r\n                return(\r\n                    <div className='flowChart'>\r\n                        {/* status-1*/}\r\n                        <div className='circle'>Cart</div>\r\n                        <div className=\"line\"></div>\r\n                        <div className='circle'>Delivery</div>\r\n                        {/* status-2*/}\r\n                        <div className=\"lineGray\"></div>\r\n                        <div className='circleGray'>Payment</div>\r\n                        {/* status-3*/}\r\n                        <div className=\"lineGray\"></div>\r\n                        <div className='circleGray'>Confirmation</div>\r\n                    </div>\r\n                )\r\n                \r\n            case 2:\r\n                return(\r\n                    <div className='flowChart'>\r\n                        {/* status-1*/}\r\n                        <div className='circle'>Cart</div>\r\n                        <div className=\"line\"></div>\r\n                        <div className='circle'>Delivery</div>\r\n                        {/* status-2*/}\r\n                        <div className=\"line\"></div>\r\n                        <div className='circle'>Payment</div>\r\n                        {/* status-3*/}\r\n                        <div className=\"lineGray\"></div>\r\n                        <div className='circleGray'>Confirmation</div>\r\n                    </div>\r\n                )\r\n            case 3:\r\n                return(\r\n                    <div className='flowChart'>\r\n                        {/* status-1*/}\r\n                        <div className='circle'>Cart</div>\r\n                        <div className=\"line\"></div>\r\n                        <div className='circle'>Delivery</div>\r\n                        {/* status-2*/}\r\n                        <div className=\"line\"></div>\r\n                        <div className='circle'>Payment</div>\r\n                        {/* status-3*/}\r\n                        <div className=\"line\"></div>\r\n                        <div className='circle'>Confirmation</div>\r\n                    </div>\r\n                )\r\n            default:\r\n                break;\r\n        }  \r\n    }\r\n}\r\n\r\nexport default Process","import React from 'react'\r\nimport './Select.css'\r\n\r\nclass Select extends React.Component{\r\n    render(){\r\n        const {selectTitle, onChange, onBlur, errorM, option} = this.props\r\n        return(\r\n            <div className='row'>\r\n              <span className='inlineSpan'>{selectTitle}</span>\r\n              <select name={selectTitle} onChange = {onChange} onBlur = {onBlur}>\r\n                <option key={'null'}></option>\r\n                {option.map(option => {\r\n                    return(<option key={option} value={option} >{option}</option>)\r\n                })}\r\n              </select>  \r\n              {errorM && <div className='errorSelect'>{errorM}</div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Select","import React from 'react'\r\nimport Select from '../Select/Select'\r\nimport './InputForm.css'\r\n\r\nclass InputForm extends React.Component{\r\n    render(){\r\n        if(this.props.format === 'base'){\r\n           return(\r\n            <div className='row'>\r\n                <span>{this.props.title}</span>\r\n                <div className='relativeForError'>\r\n                    <input {...this.props}/> \r\n                    {this.props.errorM && <div className='error'>{this.props.errorM}</div>}\r\n                </div>\r\n            </div>\r\n            ) \r\n        } else {\r\n            return(\r\n                (this.props.title.map((item,index) =>\r\n                <Select \r\n                key={this.props.title[index].selectTitle}\r\n                selectTitle={item.selectTitle} \r\n                option={item.option}\r\n                onBlur = {this.props.onBlur}\r\n                onChange = {this.props.onChange}\r\n                errorM = {this.props.errorM}\r\n                />)\r\n                )\r\n            )\r\n        } \r\n    }\r\n}\r\n\r\nexport default InputForm\r\n","import React from 'react'\r\nimport './SummaryItem.css'\r\n\r\nclass SummaryItem extends React.Component{\r\n    render(){\r\n        const {product, index} = this.props\r\n        const img = `/codecommerce/img/${product.item.categories}/${product.item.name}.jpg`\r\n        return(\r\n            <div className='summaryItem' key={'item-' + index}>\r\n                <div className='imgWrapper'>\r\n                    <img src={img} alt=\"product\" />\r\n                </div>\r\n                <div className=\"itemInfo\">\r\n                    <h6>{product.name}</h6>\r\n                    <div> <span className='boldTitle'>QUANTITY <br /> </span>{product.quantity}</div>\r\n                    <div> <span className='boldTitle'>PRICE <br /> </span>{product.price}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SummaryItem","import React from 'react'\r\nimport SummaryItem from '../SummaryItem/SummaryItem';\r\nimport './Summary.css'\r\n\r\nclass Summary extends React.Component{\r\n\r\n   cardNumDisplay = (cardNum) => {\r\n    let display, cardNumLength = cardNum.length\r\n\r\n    display = [...cardNum]\r\n    .map( (digit, index) => {\r\n        if(digit !== ' ' && index <  cardNumLength - 4 ){\r\n        digit = '*';\r\n        }\r\n        return digit;\r\n    }).join(''); \r\n\r\n    return display;     \r\n}\r\n\r\n    render(){\r\n        const {totalPrice, discount, itemData, userData, cardData, status,  \r\n            shippingMethod, handlePageFinished} = this.props\r\n        const summaryData = [\r\n            {status:0, title:'Car Subtotal', price:totalPrice},\r\n            {status:0, title:'Discount', price:discount},\r\n            {status:0, title:'Cart Total', price:totalPrice - discount},\r\n        ]\r\n        const payNum = 'PAY $ ' + (totalPrice - discount) ;\r\n        return(\r\n            <div className=\"summary\">\r\n                    <h5>SUMMARY</h5>\r\n                    {/* price*/}\r\n                    {summaryData\r\n                        .map(item => {\r\n                            return(\r\n                                    <div key={item.title} className='summaryPrice'>\r\n                                        <div className='subtitle'>{item.title}</div>\r\n                                        <div className='price'>${item.price}</div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                    } \r\n                    {/* item*/}\r\n                    {status >= 1 && itemData &&\r\n                        <div className='summaryItemWrapper'>\r\n                            {itemData.map( (product, index) => \r\n                                <SummaryItem product = {product} index = {index}/>)\r\n                            }\r\n                        </div>\r\n                    }\r\n                    {/* user information*/}\r\n                    { status >= 2 && userData &&  \r\n                        <div className='itemInfo'> \r\n                            <div className='subtitle'>Shipping Information</div>\r\n                            <span className='boldTitle'>NAME : </span>{userData.nameSurname}\r\n                            <br />\r\n                            <span className='boldTitle'>ADDRESS : </span>\r\n                                <br />\r\n                                {userData.zipCode}\r\n                                <br />\r\n                                {userData.yourAddress} \r\n                                {userData.addressTitle} \r\n                                <br />\r\n                                {userData.city} \r\n                                {userData.state} \r\n                                {userData.country}\r\n                            <br />\r\n                            <span className='boldTitle'>CELLPHONE : </span>\r\n                                {userData.cellphone}\r\n                            <br />\r\n                        </div>\r\n                    }  \r\n                    {/* shipping method*/}      \r\n                    {shippingMethod &&\r\n                        <div className=\"itemInfo\">\r\n                            <div className='subtitle'>Shipping Method</div>\r\n                            {shippingMethod.toUpperCase()}\r\n                        </div>\r\n                    }\r\n                    {/* card information*/}\r\n                    {cardData &&\r\n                        <div className='itemInfo'>\r\n                            <div className=\"subtitle\">Card Information</div>\r\n                            <span className='boldTitle'>CARDHOLDER NAME : </span>\r\n                            {this.props.cardData.cardHolderName}\r\n                            <br />\r\n                            <span className='boldTitle'>CARD NUMBER : </span>\r\n                            <br />\r\n                            {this.cardNumDisplay(this.props.cardData.cardNumber)}\r\n                            <br />\r\n                            <span className='boldTitle'>EXPIRE DATE : </span>\r\n                            {this.props.cardData.expireMonth} \r\n                            {'/'}\r\n                            {this.props.cardData.expireYear}\r\n                            <br />\r\n                        </div>\r\n                    }\r\n                    {/* submit button*/}\r\n                    {status === 2 ? \r\n                    <button className='checkoutBtn' value='pay' onClick={handlePageFinished}>\r\n                        {payNum}\r\n                    </button>\r\n                    : \r\n                    <button className='checkoutBtn' value='checkout' onClick={handlePageFinished}>\r\n                        CHECKOUT\r\n                    </button>\r\n                    }        \r\n                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Summary","import React from 'react'\r\nimport './ShippingMethod.css'\r\n\r\nclass ShippingMethod extends React.Component{\r\n    render(){\r\n        const {type, value, onClick, selectedOption, info} = this.props\r\n        return(\r\n            <div>\r\n                <input \r\n                type={type} \r\n                value={value} \r\n                className='radioOption' \r\n                onClick={onClick}\r\n                checked={selectedOption === value}\r\n                />\r\n                <span className='radioText'>{info}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShippingMethod\r\n","import React from 'react'\r\nimport './Confirm.css'\r\nimport PaymentInfo from '../PaymentInfo/PaymentInfo'\r\nimport Process from '../Process/Process'\r\nimport Summary from '../Summary/Summary'\r\nimport SignupLogin from '../SignupLogin/SignupLogin'\r\n\r\nclass Confirm extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            status:3,\r\n            toPrevPage:false,\r\n            toNextPage:false,\r\n        }\r\n    }\r\n\r\n    handleBtnBack = () => {\r\n        const toPrevPage = this.state.toPrevPage\r\n        this.setState({\r\n            toPrevPage : !toPrevPage\r\n        })\r\n    }\r\n\r\n    handlePageFinished = () => {\r\n       let {toNextPage} = this.state;\r\n       \r\n       this.setState({\r\n            toNextPage:!toNextPage\r\n       })\r\n      \r\n    }\r\n\r\n    render(){\r\n        const {toPrevPage, toNextPage, status} = this.state;\r\n        const {itemData, userData, cardData, totalPrice, shippingMethod, discount} = this.props\r\n\r\n        return(\r\n        <>\r\n            {/* to previous page*/}\r\n            {toPrevPage && <PaymentInfo\r\n                        itemData = {itemData} \r\n                        userData = {userData}\r\n                        totalPrice = {totalPrice}\r\n                        discount = {discount}/> \r\n            }\r\n            \r\n            {/* to next page*/}\r\n            {toNextPage && <SignupLogin />}\r\n\r\n            {/* confirm page*/}\r\n            {!toPrevPage && !toNextPage && \r\n                <div className=\"container\">\r\n                        {/* left block*/}\r\n                        <div className=\"confirmation\">\r\n                            {/* process flow chart*/}\r\n                            <Process status = {this.state.status} key='process'/>\r\n                            <h2 className='shippingInfoTitle'>Confirmation</h2>\r\n                            {/* confirm information*/}\r\n                            <div className='confirmationInfo'>\r\n                                <div className=\"confirmationTitle\">\r\n                                    Congratulation !!\r\n                                    <br />\r\n                                    Your Order Is Accepted\r\n                                </div>\r\n                                <div className=\"confirmationContent\">\r\n                                    Lorem ipsum dolor sit amet consectetur, adipisicing elit. \r\n                                    <br />\r\n                                    Atque qui facilis, vel totam omnis deserunt maiores est \r\n                                    <br />\r\n                                    voluptas voluptate blanditiis fuga sit mollitia necessitatibus\r\n                                    <br /> \r\n                                    culpa sapiente, quaerat velit dolores error.\r\n                                </div>\r\n                            </div>\r\n                            <button className='backBtn' onClick={this.handleBtnBack}>Back To PaymentInfo</button>\r\n                        </div>\r\n                        {/* right block*/}\r\n                        <Summary\r\n                        key='summary'\r\n                        status = {status}\r\n                        isPageFinished = {this.state.isPageFinished}\r\n                        handlePageFinished={this.handlePageFinished}\r\n                        itemData = {itemData} \r\n                        userData = {userData}\r\n                        cardData = {cardData}\r\n                        totalPrice = {totalPrice}\r\n                        discount = {discount}\r\n                        shippingMethod = {shippingMethod}\r\n                        />\r\n                </div>}\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Confirm\r\n","\r\nexport const OTHERCARDS = [\r\n    /[1-9]/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    ' ',\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    ' ',\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    ' ',\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/\r\n]\r\n\r\nexport const AMERICANEXPRESS = [\r\n    /[1-9]/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    ' ',\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    ' ',\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/\r\n]\r\n\r\n","import React from 'react'\r\nimport './PaymentInfo.css'\r\nimport Shipping from '../Shipping/Shipping'\r\nimport Summary from '../Summary/Summary'\r\nimport InputForm from '../InputForm/InputForm'\r\nimport Process from '../Process/Process'\r\nimport Confirm from '../Confirm/Confirm'\r\nimport { OTHERCARDS } from '../InputForm/constants'\r\nimport {onlyNumValidation, cardNumberValidation, onlyStringValidation, checkNullValidation} from '../validation'\r\n\r\nconst INIT_CARD = {\r\n    cardNumber:'',\r\n    cardHolderName:'',\r\n    expireMonth:'',\r\n    expireYear:'',\r\n    ccv:'',\r\n}\r\n\r\nclass PaymentInfo extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            status:2,\r\n            toPrevPage:false,\r\n            toNextPage:false,\r\n            isPageFinished:false,\r\n            cardData:INIT_CARD,\r\n            maxLength:OTHERCARDS.length,\r\n            error:{},\r\n        }\r\n    }\r\n\r\n    numberSeq = (start,end) => {\r\n    let seqArr = [];\r\n    let num = end - start + 1;\r\n    seqArr = \r\n        Array(num)\r\n        .fill()\r\n        .map((element, index) => index + start)\r\n    return seqArr\r\n    }\r\n\r\n    handleInputData = ({target:{name,value}}) =>{\r\n        if(name === 'cardNumber'){\r\n            let mask = value.split(' ').join('')\r\n            if(mask.length){\r\n                mask = mask.match(new RegExp('.{1,4}', 'g')).join(' ')\r\n                 this.setState( prevState => ({\r\n                 cardData : {...prevState.cardData, [name] : mask}\r\n             }))\r\n            } else{\r\n                this.setState( prevState => ({\r\n                cardData : {...prevState.cardData, [name] : value}\r\n            }))\r\n            }\r\n        } else{\r\n            this.setState( prevState => ({\r\n            cardData : {...prevState.cardData, [name] : value}\r\n        }))\r\n        }\r\n    }\r\n\r\n    handleBtnBack = () => {\r\n        const toPrevPage = this.state.toPrevPage\r\n        this.setState({\r\n            toPrevPage : !toPrevPage\r\n        })\r\n    }\r\n\r\n    handleValidation = (type, value) =>{\r\n        let errorText\r\n        let name = type + 'Error'\r\n        switch (type) {\r\n            case 'cardNumber':\r\n                errorText = cardNumberValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'cardHolderName':\r\n                errorText = onlyStringValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n        \r\n            case 'ccv':\r\n                errorText = onlyNumValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            \r\n            case 'expireMonth':\r\n            case 'expireYear':\r\n                errorText = checkNullValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleBlur = ({target:{name,value}}) => this.handleValidation(name,value)\r\n\r\n    checkErrorBeforeSave = () => {\r\n        const {cardData, error} = this.state\r\n        let errorValue = {}\r\n        let isError = false\r\n        Object.keys(cardData).forEach( val => {\r\n            let errorKey = val + 'Error'\r\n            if(!cardData[val].length || error[errorKey]){ \r\n               if(!cardData[val].length){\r\n                    errorValue = {...errorValue,[`${val}Error`]:'Required'}    \r\n                } else{\r\n                    errorValue = {...errorValue,[`${val}Error`]:error[`${val}Error`]}  \r\n               }\r\n              isError = true\r\n            }\r\n        })\r\n        \r\n        this.setState({'error':errorValue}) \r\n        return isError\r\n    }\r\n\r\n    handlePageFinished = () => {\r\n       let isError = this.checkErrorBeforeSave();\r\n       let {isPageFinished,toNextPage} = this.state;\r\n       if(!isError){\r\n            this.setState({\r\n                isPageFinished:!isPageFinished,\r\n                toNextPage:!toNextPage\r\n            })\r\n       }\r\n    }\r\n\r\n    render(){\r\n        const {maxLength} = this.state\r\n        const {itemData, totalPrice, discount, userData, shippingMethod} = this.props\r\n        const inputData = [\r\n            {format:'base', title:'CardHolder Name', type:'text', name:'cardHolderName',error:'cardHolderNameError'},\r\n            {format:'base', title:'Card Number', type:'text', name:'cardNumber',error:'cardNumberError'},\r\n            {format:'select',\r\n             title:[{name:'expireMonth',selectTitle:'expireMonth',option:this.numberSeq(1, 12)}, \r\n                    {name:'expireYear',selectTitle:'expireYear',option:this.numberSeq(2010,2030)},  \r\n                    ],  \r\n             type: 'select',\r\n             name:'select',\r\n             error:['expireMonthError', 'expireYearError']},\r\n            {format:'base', title:'CCV', type:'text', name:'ccv',error:'ccvError'},\r\n        ]\r\n        if(this.state.toPrevPage){\r\n            return (<Shipping\r\n                    itemData = {itemData} \r\n                    totalPrice = {totalPrice}\r\n                    discount = {discount}\r\n                    />)\r\n        } else if(this.state.toNextPage){\r\n            return (<Confirm\r\n                    cardData = {this.state.cardData}\r\n                    userData = {userData}\r\n                    shippingMethod = {shippingMethod}\r\n                    itemData = {itemData} \r\n                    totalPrice = {totalPrice}\r\n                    discount = {discount}\r\n            />\r\n            )\r\n        } else{\r\n            return(\r\n                <div className=\"container\">\r\n                    {/* left block*/}\r\n                    <div className=\"paymentForm\">\r\n                        {/* process flow chart*/}\r\n                        <Process status = {this.state.status} key='process'/>\r\n                        <h2 className='shippingInfoTitle'>Payment Information</h2>\r\n                            {/* form input*/}\r\n                            {inputData.map(item => \r\n                                <InputForm\r\n                                value = {this.state.cardData && this.state.cardData[item.name]}\r\n                                maxLength = {maxLength}\r\n                                key={item.name}\r\n                                format={item.format} \r\n                                title={item.title}\r\n                                type={item.type}\r\n                                name={item.name}\r\n                                onChange = {this.handleInputData}\r\n                                onBlur = {this.handleBlur}\r\n                                autoComplete = 'off'\r\n                                errorM = {\r\n                                (this.state.error \r\n                                && this.state.error[item.error]\r\n                                && this.state.error[item.error].length > 1)\r\n                                ? this.state.error[item.error]\r\n                                : null\r\n                                }\r\n                                />    \r\n                            )}\r\n                            <button className='backBtn' onClick={this.handleBtnBack}>Back To Shipping</button>\r\n                    </div>\r\n                    {/* right block*/}\r\n                    <Summary\r\n                    key='summary'\r\n                    status = {this.state.status}\r\n                    isPageFinished = {this.state.isPageFinished}\r\n                    handlePageFinished={this.handlePageFinished}\r\n                    itemData = {itemData} \r\n                    totalPrice = {totalPrice}\r\n                    discount = {discount}\r\n                    userData = {userData}\r\n                    shippingMethod = {shippingMethod}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default PaymentInfo","import React from 'react'\r\nimport './Shipping.css'\r\nimport Cart from '../Cart/Cart'\r\nimport Process from '../Process/Process'\r\nimport InputForm from '../InputForm/InputForm'\r\nimport Summary from '../Summary/Summary'\r\nimport ShippingMethod from '../ShippingMethod/ShippingMethod'\r\nimport PaymentInfo from '../PaymentInfo/PaymentInfo'\r\nimport {onlyNumValidation, onlyStringValidation, checkNullValidation} from '../validation'\r\n\r\nconst SHIPPING = {\r\n    addressTitle:'',\r\n    nameSurname:'',\r\n    yourAddress:'',\r\n    zipCode:'',\r\n    cellphone:'',\r\n    telephone:'',\r\n    country:'',\r\n    city:'',\r\n    state:''\r\n}\r\n\r\nclass Shipping extends React.Component{\r\n    constructor(props){\r\n      super(props)\r\n        this.state = {\r\n            status:1,\r\n            userData:SHIPPING,\r\n            toPrevPage:false,\r\n            toNextPage:false,\r\n            isPageFinished:false,\r\n            selectedOption:'standard',\r\n            error:{},\r\n        }\r\n    }\r\n\r\n    handleInputData = ({target:{name,value}}) =>{\r\n        this.setState( prevState => ({\r\n            userData : {...prevState.userData, [name] : value}\r\n        }))\r\n    }\r\n\r\n    handleOptionChange = e => {\r\n        let selectedOption = e.target.value\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n        });\r\n    };\r\n\r\n    handleBtnBack = () => {\r\n        const toPrevPage = this.state.toPrevPage\r\n        this.setState({\r\n            toPrevPage : !toPrevPage\r\n        })\r\n    }\r\n\r\n    handleValidation = (type, value) =>{\r\n        let errorText\r\n        let name = type + 'Error'\r\n        switch (type) {\r\n            case 'nameSurname':\r\n            case 'yourAddress':\r\n            case 'addressTitle':\r\n                errorText = onlyStringValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'cellphone':\r\n                errorText = onlyNumValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n        \r\n            case 'telephone':\r\n                errorText = onlyNumValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            \r\n            case 'zipCode':\r\n                errorText = onlyNumValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;    \r\n            case 'country':\r\n            case 'city':\r\n            case 'state':\r\n                errorText = checkNullValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleBlur = ({target:{name,value}}) => this.handleValidation(name,value)\r\n\r\n    checkErrorBeforeSave = () => {\r\n        const {userData, error} = this.state\r\n        let errorValue = {}\r\n        let isError = false\r\n        Object.keys(userData).forEach( val => {\r\n            let errorKey = val + 'Error'\r\n            if(!userData[val].length || error[errorKey]){ \r\n               if(!userData[val].length){\r\n                    errorValue = {...errorValue,[`${val}Error`]:'Required'}    \r\n                } else{\r\n                    errorValue = {...errorValue,[`${val}Error`]:error[`${val}Error`]}  \r\n               }\r\n              isError = true\r\n            }\r\n        })\r\n        \r\n        this.setState({'error':errorValue}) \r\n        return isError\r\n    }\r\n\r\n    handlePageFinished = () => {\r\n       let isError = this.checkErrorBeforeSave();\r\n       let {isPageFinished,toNextPage} = this.state;\r\n       if(!isError){\r\n            this.setState({\r\n                isPageFinished:!isPageFinished,\r\n                toNextPage:!toNextPage\r\n            })\r\n       }\r\n    }\r\n\r\n    render(){\r\n        const inputData = [\r\n            {format:'base', title:'Address Title', type:'text', name:'addressTitle',error:'addressTitleError'},\r\n            {format:'base', title:'Name-Surname', type:'text', name:'nameSurname',error:'nameSurnameError'},\r\n            {format:'base', title:'Your Address', type:'text', name:'yourAddress',error:'yourAddressError'},\r\n            {format:'base', title:'Zip Code', type:'text', name:'zipCode',error:'zipCodeError'},\r\n            {format:'select',\r\n             title:[{name:'country',selectTitle:'country',option:['us', 'uk']}, \r\n                    {name:'city',selectTitle:'city',option:['new york', 'london']},  \r\n                    {name:'state',selectTitle:'state',option:['new york', 'london']}],  \r\n             type: 'select',\r\n             name:'select',\r\n             error:['countryError', 'cityError', 'stateError']},\r\n            {format:'base', title:'Cellphone', type:'text', name:'cellphone',error:'cellphoneError'},\r\n            {format:'base', title:'Telephone', type:'text', name:'telephone',error:'telephoneError'},\r\n        ]\r\n        const shippingMethodOption = [\r\n            {type:'radio', value:'standard', info:'Standard Delivery in 4-6 business Days - Free '},\r\n            {type:'radio', value:'express', info:'Express - Delivery in 2-3 business Days - $ 5.00'},\r\n        ]\r\n        const {homepageData, itemData, totalPrice, discount} = this.props\r\n\r\n            if(this.state.toPrevPage){\r\n                return(<Cart itemData = {homepageData}/>)\r\n            } else if(this.state.toNextPage){\r\n                return(<PaymentInfo\r\n                        userData = {this.state.userData}\r\n                        shippingMethod = {this.state.selectedOption}\r\n                        itemData = {itemData} \r\n                        totalPrice = {totalPrice}\r\n                        discount = {discount}\r\n                        />)\r\n            } else{\r\n                return(\r\n                <div className=\"container\">\r\n                    {/* left block*/}\r\n                    <div className=\"shippingForm\">\r\n                        {/* process flow chart*/}\r\n                        <Process status = {this.state.status} key='process'/>\r\n                        <h2 className='shippingInfoTitle'>Shipping Information</h2>\r\n                            {/* form input*/}\r\n                            {inputData.map(item => \r\n                                <InputForm\r\n                                key={item.name}\r\n                                format={item.format} \r\n                                title={item.title}\r\n                                type={item.type}\r\n                                name={item.name}\r\n                                onChange = {this.handleInputData}\r\n                                onBlur = {this.handleBlur}\r\n                                autoComplete = 'off'\r\n                                errorM = {\r\n                                (this.state.error \r\n                                && this.state.error[item.error]\r\n                                && this.state.error[item.error].length > 1)\r\n                                ? this.state.error[item.error]\r\n                                : null\r\n                                }\r\n                                />    \r\n                            )}\r\n                            {/* shipping method*/}\r\n                            <h2 className='shippingMethod'>Shipping Method</h2>\r\n                            {shippingMethodOption.map(item => \r\n                                <ShippingMethod\r\n                                key={item.value}\r\n                                type={item.type}\r\n                                value={item.value}\r\n                                info={item.info}\r\n                                onClick={this.handleOptionChange}\r\n                                selectedOption={this.state.selectedOption}\r\n                                />\r\n                            )}\r\n                            <button className='backBtn' onClick={this.handleBtnBack}>Back To Cart</button>\r\n                    </div>\r\n                    {/* right block*/}\r\n                    <Summary\r\n                    key='summary'\r\n                    itemData = {itemData} \r\n                    totalPrice = {totalPrice}\r\n                    discount = {discount}\r\n                    userData = {this.state.userData}\r\n                    shippingMethod = {this.state.shippingMethod}\r\n                    status = {this.state.status}\r\n                    isPageFinished = {this.state.isPageFinished}\r\n                    handlePageFinished={this.handlePageFinished}\r\n                    />\r\n                </div> \r\n                )\r\n            }\r\n        }\r\n}\r\n\r\nexport default Shipping","import React from 'react'\r\nimport Item from '../Item/Item'\r\nimport Shipping from '../Shipping/Shipping'\r\nimport Summary from '../Summary/Summary'\r\nimport './Cart.css'\r\n\r\nclass Cart extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            priceArr: [],\r\n            quantityArr:[],\r\n            totalPrice:0,\r\n            discount:0,\r\n            status:0,\r\n            isPageFinished:false,\r\n            toNextPage:false,\r\n        }\r\n    }\r\n\r\n    setInitialPriceArr = (itemData) =>{\r\n        const priceArr = []\r\n        itemData.map(item => priceArr.push(item.price))\r\n        this.setState({\r\n            priceArr: priceArr\r\n        })\r\n    }\r\n\r\n    sumPriceArr = (arr) =>{\r\n        this.setState({\r\n            totalPrice : arr.reduce( (prev, current) => (Number(prev) + Number(current)).toFixed(2),0 )\r\n        })\r\n        \r\n    }\r\n\r\n    pushElementToArr = (val,quantity,index) =>{\r\n        this.setState(prevState => {\r\n            const { priceArr } = prevState;\r\n            const {quantityArr} = prevState;\r\n            priceArr[index] = val;\r\n            quantityArr[index] = quantity;\r\n            return {priceArr,quantityArr}\r\n            \r\n        },() => {this.sumPriceArr(this.state.priceArr)})\r\n    }\r\n\r\n    handlePageFinished = () => {\r\n        /* organized data*/\r\n        let selectedItemIndex, selectedItem, selectedPriceArr, selectedQuantityArr;\r\n        let data = [] \r\n        const {priceArr, quantityArr} = this.state\r\n\r\n        selectedItemIndex = (priceArr).map((item,index) => item === null? null : index)\r\n                        .filter(item => item !== null)\r\n        \r\n        selectedItem = (this.props.itemData).map((item,index) => selectedItemIndex.includes(index) ? item : null)\r\n                    .filter(item => item!==null)\r\n        \r\n        selectedPriceArr = priceArr.filter(item => item !== null )\r\n        \r\n        selectedQuantityArr = quantityArr.filter(item => item !== null )\r\n\r\n        for (let i = 0; i < selectedQuantityArr.length; i++) {\r\n            let tempObject = {item:null, price:null, quantity:null}\r\n            tempObject.item = selectedItem[i]\r\n            tempObject.price = selectedPriceArr[i]\r\n            tempObject.quantity = selectedQuantityArr[i]\r\n            data.push(tempObject)\r\n        }\r\n\r\n        if(this.state.totalPrice !== 0){\r\n            this.setState({\r\n                isPageFinished: true,\r\n                toNextPage:true,\r\n                data:data,\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){    \r\n        const {totalPrice, discount, status, isPageFinished,\r\n            toNextPage, quantityArr, data} = this.state\r\n        const {itemData} = this.props\r\n        return(\r\n            (toNextPage ? \r\n            <Shipping \r\n            homepageData = {itemData}\r\n            itemData = {data} \r\n            totalPrice = {totalPrice}\r\n            discount = {discount}\r\n            />:\r\n            <div className='container'>\r\n                <div className='cart'>\r\n                    <div className=\"colName\">\r\n                        <div>Product</div>\r\n                        <div>Price</div>\r\n                        <div>Quantity</div>\r\n                        <div>Total Price</div>\r\n                    </div>\r\n                    {itemData.map( (item,index) => (\r\n                        <Item \r\n                        itemInfo = {item}\r\n                        index = {index}\r\n                        pushElementToArr = {this.pushElementToArr}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <Summary\r\n                itemData={null}\r\n                totalPrice = {totalPrice}\r\n                discount ={discount}\r\n                quantityArr = {quantityArr}\r\n                status = {status}\r\n                isPageFinished = {isPageFinished}\r\n                handlePageFinished={this.handlePageFinished}\r\n                />\r\n            </div>\r\n            )\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Cart","import { SHOPPER_URL, SHOPPER_API } from './constant'\r\n\r\nclass Service {\r\n\r\n    async fetchCommerceAPI(limit) {\r\n        return new Promise(async (success, failure) => {\r\n            try {\r\n                const url = new URL(SHOPPER_URL)\r\n                let params = {\r\n                    \"limit\": limit,\r\n                };\r\n                Object.keys(params)\r\n                    .forEach(key => url.searchParams.append(key, params[key]));\r\n                let headers = {\r\n                    \"X-Authorization\": SHOPPER_API,\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                };\r\n\r\n                const res = await fetch(url, {\r\n                    method: \"GET\",\r\n                    headers: headers,\r\n                })\r\n                if (res) {\r\n                    const json = await res.json()\r\n                    const data = json.data.map(item => ({\r\n                        name: item.name,\r\n                        categories: item.categories[0].name,\r\n                        description: item.description,\r\n                        inventory: item.inventory.available,\r\n                        price: item.price.raw\r\n                    }))\r\n                    success(data)\r\n                } else {\r\n                    failure({ error: 'Invalid http request' })\r\n                }\r\n            } catch (error) {\r\n                failure(error)\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default Service","export const SHOPPER_URL = 'https://api.chec.io/v1/products'\r\nexport const SHOPPER_API = process.env.REACT_APP_API\r\n","import React, { Component } from 'react';\r\nimport './HomepageItem.css'\r\n\r\nclass HomepageItem extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            popup:false,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {itemInfo, index} = this.props\r\n        const img = `/codecommerce/img/${itemInfo.categories}/${itemInfo.name}.jpg`\r\n\r\n        return (\r\n            <div className='card' data-index={index} onClick={this.props.popupClick}>\r\n                <div className=\"imgWrapper\">\r\n                    <img src={img} alt=\"product\" />\r\n                </div>\r\n                <div className='name'>\r\n                    <span className='subTitle'>Name : </span>\r\n                    <span>{itemInfo.name}</span>\r\n                </div>\r\n                <div className='categories'>\r\n                    <span className='subTitle'>Categories : </span>\r\n                    <span>{itemInfo.categories}</span>\r\n                </div>\r\n                <div className='inventory'>\r\n                    <span className='subTitle'>Inventory : </span>\r\n                    <span>{itemInfo.inventory}</span>\r\n                </div>\r\n                <div className='price'>\r\n                    <span className='subTitle'>Price : </span>\r\n                    <span>{itemInfo.price}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomepageItem;","import React, { Component } from 'react';\r\nimport './SearchResult.css'\r\nimport HomepageItem from '../HomepageItem/HomepageItem';\r\n\r\nclass SearchResult extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    search = (input, data) => {\r\n        let  displayItemArr = data.filter(element => element.name.includes(input) || \r\n                            element.categories.includes(input))\r\n        if(input === null){\r\n            displayItemArr = data\r\n        }\r\n        return displayItemArr\r\n    }\r\n\r\n    render() {\r\n        const {input, data} = this.props\r\n        const displayItemArr = this.search(input, data)\r\n\r\n        return (\r\n            <>\r\n            <div className=\"colName\">Product</div>\r\n            <div className='searchResultContainer'>\r\n                {displayItemArr.map( (item, index) => (\r\n                    <HomepageItem \r\n                    itemInfo = {item}\r\n                    index = {index}\r\n                    key={item.name}\r\n                    popupClick = {this.props.popupClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchResult;","import React from 'react'\r\nimport './SearchInput.css'\r\nimport SearchResult from '../SearchResult/SearchResult'\r\n\r\nclass SearchInput extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            inputData:null,\r\n        }\r\n    }\r\n\r\n    handleInputData = ({target:{value}}) =>{\r\n        this.setState( () => ({inputData : value}))\r\n    }\r\n\r\n    render(){    \r\n        return(\r\n            <>\r\n            <div className='inputWrapper'>\r\n                <input type=\"text\" \r\n                className='searchInput' \r\n                onChange = {this.handleInputData}\r\n                placeholder='Search for the product or categories'/>\r\n            </div>\r\n            <SearchResult \r\n            input = {this.state.inputData} \r\n            data = {this.props.data} \r\n            popupClick = {this.props.popupClick}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchInput","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport './Popup.css'\r\n\r\nclass Popup extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    removeHTMLtag = str => str.replace( /(<([^>]+)>)/ig, '')\r\n\r\n    render() {\r\n        const {data, popupClose, addToCart, index} = this.props\r\n        const img = `/codecommerce/img/${data.categories}/${data.name}.jpg`\r\n\r\n        //remove the HTML tag in description\r\n        data.description = this.removeHTMLtag(data.description)\r\n        \r\n        return (\r\n            <div className='popup'>\r\n                <FontAwesomeIcon icon={faTimes} className='timesIcon' onClick={popupClose} />\r\n\r\n                <div className=\"leftSection\">\r\n                    <img src={img} alt=\"product\" />\r\n                </div>\r\n\r\n                <div className=\"rightSection\">\r\n                    <div className=\"name\">\r\n                        <span className='value'>{data.name}</span>\r\n                    </div>\r\n                    <div className=\"price\">\r\n                        <span className='title'>Price</span>\r\n                        <span className='value'>{data.price}</span>\r\n                    </div>\r\n                    <div className=\"inventory\">\r\n                        <span className='title'>Inventory</span>\r\n                        <span className='value'>{data.inventory}</span>\r\n                    </div>\r\n                    <div className=\"categories\">\r\n                        <span className='title'>Categories</span>\r\n                        <span className='value'>{data.categories}</span>\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <span className='title'>Description</span>\r\n                        <p className='value'>{data.description}</p>\r\n                    </div>\r\n                    <div className=\"addToCartBtn\" onClick={addToCart} data-index = {index}>Add To Cart</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Popup;","import React, { Component } from 'react';\r\nimport './StatusElement.css'\r\n\r\nclass StatusElement extends Component {\r\n    render() {\r\n        const {item} = this.props\r\n        const img = `/codecommerce/img/${item.categories}/${item.name}.jpg`\r\n        return (\r\n            <div key={item.name} className='itemWrapper'>\r\n                    <div className=\"StatusleftSection\">\r\n                        <img src={img} alt=\"product\" />\r\n                    </div>\r\n                    <div className=\"StatusrightSection\">\r\n                        <div className=\"name\">\r\n                            <span className='value'>{item.name}</span>\r\n                        </div>\r\n                        <div className=\"price\">\r\n                            <span className='title'>Price</span>\r\n                            <span className='value'>{item.price}</span>\r\n                        </div>\r\n                        <div className=\"inventory\">\r\n                            <span className='title'>Inventory</span>\r\n                            <span className='value'>{item.inventory}</span>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusElement;","import React, { Component } from 'react';\r\nimport './HomepageCartStatus.css'\r\nimport StatusElement from '../StatusElement/StatusElement';\r\n\r\nclass HomepageCartStatus extends Component {\r\n    render() {\r\n        const {data, handlePageFinished} = this.props\r\n        \r\n        return (\r\n            <div className='cartStatus'>\r\n                <h3>YOUR CART : {data.length} </h3>\r\n                {data.map(item => (\r\n                    <StatusElement item = {item}/>\r\n                ))}\r\n                <div className='goToCart' onClick={handlePageFinished}>GO TO CART</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomepageCartStatus;","import React, { Component } from 'react';\r\nimport './Homepage.css'\r\nimport Cart from '../Cart/Cart'\r\nimport Service from '../../services'\r\nimport SearchInput from '../SearchInput/SearchInput';\r\nimport Popup from '../Popup/Popup';\r\nimport HomepageCartStatus from '../HomepageCartStatus/HomepageCartStatus';\r\n\r\nclass Homepage extends Component {\r\n    state ={\r\n        data:[],\r\n        loading:false, \r\n        error:false,   \r\n        isPageFinished:false,\r\n        popup:false,\r\n        popupItemIndex:null,\r\n        cartItem:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({loading:true})\r\n        const service = new Service()\r\n        service.fetchCommerceAPI(25)\r\n                .then( res => {\r\n                if(res){\r\n                    this.setState({\r\n                        data: res,\r\n                        loading:false,\r\n                    })\r\n                } else{\r\n                    this.setState({\r\n                        loading:false,\r\n                    })\r\n                }\r\n            }, error => {\r\n                console.log(error)\r\n                this.setState({\r\n                    loading:false,\r\n                    error:true\r\n                })\r\n            })\r\n    }\r\n\r\n    pushElementToArr = (val,quantity,index) =>{\r\n        this.setState(prevState => {\r\n            const { priceArr } = prevState;\r\n            const {quantityArr} = prevState;\r\n            priceArr[index] = val;\r\n            quantityArr[index] = quantity;\r\n            return {priceArr,quantityArr}\r\n            \r\n        },() => {this.sumPriceArr(this.state.priceArr)})\r\n    }\r\n\r\n    handlePopupClick = (e) =>{\r\n        let popup = this.state.popup\r\n        let index = e.currentTarget.dataset.index\r\n        this.setState({\r\n            popup: !popup,\r\n            popupItemIndex: index,\r\n        })\r\n    }\r\n\r\n    popupClose = () =>{\r\n        let popup = this.state.popup\r\n        this.setState({\r\n            popup: !popup,\r\n        })\r\n    }\r\n\r\n    addToCart = (e) =>{\r\n        const index = e.currentTarget.dataset.index\r\n        const {cartItem, data} = this.state\r\n        let isRepeat = cartItem.includes(data[index])\r\n        if(!isRepeat){\r\n            this.setState({\r\n            cartItem: [...cartItem, data[index]],\r\n            })\r\n        }\r\n    }\r\n\r\n    handlePageFinished = () => { \r\n        const {cartItem, isPageFinished} = this.state \r\n        cartItem.length && this.setState({isPageFinished: !isPageFinished})\r\n    }\r\n\r\n    render() {\r\n        const {data, loading, isPageFinished, \r\n            popup, popupItemIndex, cartItem} = this.state\r\n\r\n        if(loading){\r\n            return(<div class=\"loader\"></div>)\r\n        } else if(popup){\r\n            return(<Popup \r\n                data = {data[popupItemIndex]} \r\n                index = {popupItemIndex}\r\n                popupClose = {this.popupClose}\r\n                addToCart = {this.addToCart}\r\n                /> )\r\n        } else if (isPageFinished){\r\n            return(<Cart itemData = {cartItem}/>)\r\n        } else{\r\n            return(\r\n            <div className='homepageContainer'>\r\n                {/* left section in homepage*/}\r\n                <div className='result'>\r\n                    <SearchInput data = {data} popupClick = {this.handlePopupClick}/>\r\n                </div>\r\n                {/* left section in homepage*/}\r\n                <HomepageCartStatus data = {cartItem} handlePageFinished = {this.handlePageFinished}/>\r\n            </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React from 'react'\r\nimport './SignupLogin.css'\r\nimport Login from '../Login/Login'\r\nimport Signup from '../Signup/Signup'\r\nimport Homepage from '../Homepage/Homepage'\r\n\r\nclass SignupLogin extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            selectedOption:'login',\r\n            toNextPage:false,\r\n        }\r\n    }\r\n\r\n    handleOptionChange = e => {\r\n        this.setState({\r\n            selectedOption: e.target.value,\r\n        })   \r\n    };\r\n\r\n    switchToNextPage = () => {\r\n        let toNextPage = this.state.toNextPage;\r\n        this.setState({\r\n            toNextPage: !toNextPage\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        let toNextPage = this.state.toNextPage;\r\n        this.setState({\r\n            toNextPage: !toNextPage\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {selectedOption, toNextPage} = this.state\r\n\r\n        return(\r\n            (toNextPage ? \r\n            <Homepage />:\r\n            <div className='wrapper'>\r\n                 \r\n                    <div className='formSelection' >\r\n                        <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"login\"\r\n                            value=\"login\"\r\n                            checked={selectedOption === \"login\"}\r\n                            onChange={this.handleOptionChange}\r\n                        />\r\n                            Login\r\n                        </label>\r\n                       <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"createAccount\"\r\n                            value=\"createAccount\"\r\n                            checked={selectedOption === \"createAccount\"}\r\n                            onChange={this.handleOptionChange}\r\n                        />\r\n                            Create Account\r\n                        </label>\r\n                    </div>\r\n                    {/* display login or sign up content*/}\r\n                    {selectedOption === 'login' ? \r\n                        <Login handleSubmit = {this.handleSubmit}/> : \r\n                        <Signup handleSubmit = {this.handleSubmit}/>\r\n                    }\r\n                \r\n            </div>\r\n             )\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignupLogin","import './App.css';\nimport SignupLogin from './component/SignupLogin/SignupLogin';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SignupLogin />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}